apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec: # Pod spec
      imagePullSecrets:
      - name: {{ .Values.image.pullSecrets }}
      containers:
      - name: {{ .Values.container.name }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        env:
          - name: ENVIRONMENT_FROM_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: ENVIRONMENT_FROM_SECRET
        ports:
        - containerPort: {{ .Values.container.portNumber }}
          name: {{ .Values.container.portName }}
        envFrom:
        - configMapRef:
            name: {{ .Values.configmap.name }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.container.portNumber }}
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.container.portNumber }}
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "16Mi"
            cpu: "50m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "128Mi"
            cpu: "100m"