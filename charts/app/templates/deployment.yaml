apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-deployment"
  {{- template "labels" . }}
spec:
  replicas: 2
  selector:
    matchLabels:
      {{- include "selectorLabels" . | indent 4 }}
  template:
    metadata:
      {{- include "labels" . | indent 4 }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.image.pullSecrets | quote}}
      containers:
      - name: {{ .Chart.Name | quote }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        env:
          - name: "ENVIRONMENT_FROM_SECRET"
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-secret"
                key: ENVIRONMENT_FROM_SECRET
        ports:
        - name: {{ .Values.container.portName | quote }}
          containerPort: {{ .Values.container.portNumber }}
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-configmap"
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.container.portNumber }}
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.container.portNumber }}
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            cpu: "50m"
            memory: "16Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"